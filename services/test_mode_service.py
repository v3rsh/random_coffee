import logging
from typing import Optional
from datetime import datetime, timedelta

logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
_test_mode_active = False

# –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å–∫–æ—Ä–µ–Ω–∏—è: 1 —á–∞—Å = 1 —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å (5 –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ = 1 —á–∞—Å)
TIME_ACCELERATION_FACTOR = 5 * 24

# –•—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
_test_mode_start_time: Optional[datetime] = None


def activate_test_mode() -> bool:
    """
    –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º.
    
    :return: True, –µ—Å–ª–∏ —Ä–µ–∂–∏–º –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, False –µ—Å–ª–∏ –æ–Ω —É–∂–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω
    """
    global _test_mode_active, _test_mode_start_time
    
    if _test_mode_active:
        return False
    
    _test_mode_active = True
    _test_mode_start_time = datetime.now()
    logger.info(f"–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ {_test_mode_start_time}")
    return True


def deactivate_test_mode() -> bool:
    """
    –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º.
    
    :return: True, –µ—Å–ª–∏ —Ä–µ–∂–∏–º –±—ã–ª –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, False –µ—Å–ª–∏ –æ–Ω –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω
    """
    global _test_mode_active, _test_mode_start_time
    
    if not _test_mode_active:
        return False
    
    _test_mode_active = False
    _test_mode_start_time = None
    logger.info("–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    return True


def is_test_mode_active() -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º.
    
    :return: True, –µ—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω, –∏–Ω–∞—á–µ False
    """
    return _test_mode_active


def get_accelerated_date(real_date: datetime) -> datetime:
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –¥–∞—Ç—É –≤ —É—Å–∫–æ—Ä–µ–Ω–Ω—É—é –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ—Å—Ç–æ–≤—ã–º —Ä–µ–∂–∏–º–æ–º.
    
    :param real_date: –†–µ–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞
    :return: –£—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –¥–∞—Ç–∞, –µ—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω, –∏–Ω–∞—á–µ –∏—Å—Ö–æ–¥–Ω–∞—è –¥–∞—Ç–∞
    """
    if not _test_mode_active or _test_mode_start_time is None:
        return real_date
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –Ω–∞—á–∞–ª–æ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
    time_diff = datetime.now() - _test_mode_start_time
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤ —É—Å–∫–æ—Ä–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è (—Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏)
    accelerated_time_diff = time_diff * TIME_ACCELERATION_FACTOR
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É—Å–∫–æ—Ä–µ–Ω–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –∫ –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç–µ
    accelerated_date = real_date + accelerated_time_diff
    
    return accelerated_date


def get_real_date(accelerated_date: datetime) -> datetime:
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —É—Å–∫–æ—Ä–µ–Ω–Ω—É—é –¥–∞—Ç—É –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ä–µ–∞–ª—å–Ω—É—é.
    
    :param accelerated_date: –£—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –¥–∞—Ç–∞
    :return: –†–µ–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞, –µ—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω, –∏–Ω–∞—á–µ –∏—Å—Ö–æ–¥–Ω–∞—è –¥–∞—Ç–∞
    """
    if not _test_mode_active or _test_mode_start_time is None:
        return accelerated_date
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —É—Å–∫–æ—Ä–µ–Ω–Ω–æ–π –¥–∞—Ç–æ–π –∏ —Ç–µ–∫—É—â–∏–º —É—Å–∫–æ—Ä–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
    accelerated_now = get_accelerated_date(datetime.now())
    accelerated_diff = accelerated_date - accelerated_now
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤ —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
    real_diff = accelerated_diff / TIME_ACCELERATION_FACTOR
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –∫ —Ç–µ–∫—É—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏
    real_date = datetime.now() + real_diff
    
    return real_date


def get_test_mode_status() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞.
    
    :return: –°—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ
    """
    if not _test_mode_active:
        return "–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    
    active_duration = datetime.now() - _test_mode_start_time
    accelerated_time = active_duration * TIME_ACCELERATION_FACTOR
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –¥–Ω–∏, —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã
    days = accelerated_time.days
    hours = accelerated_time.seconds // 3600
    minutes = (accelerated_time.seconds % 3600) // 60
    
    status = (
        f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω\n"
        f"‚è± –ê–∫—Ç–∏–≤–µ–Ω: {active_duration.total_seconds() // 60:.0f} –º–∏–Ω.\n"
        f"‚è© –£—Å–∫–æ—Ä–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è: {days} –¥–Ω., {hours} —á–∞—Å., {minutes} –º–∏–Ω.\n"
        f"üîÑ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å–∫–æ—Ä–µ–Ω–∏—è: x{TIME_ACCELERATION_FACTOR}"
    )
    
    return status 