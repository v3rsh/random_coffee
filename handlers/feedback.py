import logging
from datetime import datetime

from aiogram import Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession

from database.models import Feedback, Meeting
from keyboards import create_rating_keyboard, create_feedback_keyboard, create_yes_no_keyboard
from services.user_service import get_user
from services.meeting_service import get_meeting, update_meeting
from states import FeedbackStates

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
feedback_router = Router()
logger = logging.getLogger(__name__)


@feedback_router.callback_query(F.data.startswith("rating_"))
async def process_rating(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏.
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –∏–∑ callback_data
    rating = int(callback.data.split("_")[1])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    await state.update_data(rating=rating)
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
    await callback.answer()
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_text(
        f"–¢—ã –ø–æ—Å—Ç–∞–≤–∏–ª(–∞) {rating} {'üåü' * rating}\n\n"
        "–•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π? (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    )
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–∂–∏–¥–∞–Ω–∏—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    await state.set_state(FeedbackStates.waiting_for_comment)


@feedback_router.message(StateFilter(FeedbackStates.waiting_for_comment))
async def process_comment(message: Message, state: FSMContext, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏.
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    await state.update_data(comment=message.text)
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ —É—á–∞—Å—Ç–∏–µ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤—Å—Ç—Ä–µ—á–∞—Ö
    await message.answer(
        "–•–æ—á–µ—à—å –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑?",
        reply_markup=create_feedback_keyboard()
    )


@feedback_router.callback_query(F.data == "participate_again")
async def process_participate_again(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∂–µ–ª–∞–Ω–∏—è —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞.
    """
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ state
    feedback_data = await state.get_data()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—Å—Ç—Ä–µ—á–µ –∏–∑ context (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω–∏ —Ç–∞–º —É–∂–µ –µ—Å—Ç—å)
    meeting_id = feedback_data.get("meeting_id")
    to_user_id = feedback_data.get("to_user_id")
    
    if not meeting_id or not to_user_id:
        await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.", show_alert=True)
        await state.clear()
        return
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    feedback = Feedback(
        meeting_id=meeting_id,
        from_user_id=callback.from_user.id,
        to_user_id=to_user_id,
        rating=feedback_data.get("rating"),
        comment=feedback_data.get("comment")
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    session.add(feedback)
    await session.commit()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å—Ç—Ä–µ—á–∏
    meeting = await get_meeting(session, meeting_id)
    await update_meeting(session, meeting, is_completed=True)
    
    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.answer()
    await callback.message.edit_text(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –¢–≤–æ—è –æ—Ü–µ–Ω–∫–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n\n"
        "–Ø –±—É–¥—É –ø–æ–¥–±–∏—Ä–∞—Ç—å —Ç–µ–±–µ –Ω–æ–≤—ã–µ –≤—Å—Ç—Ä–µ—á–∏ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é. –ñ–¥–∏ –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π! üòä"
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()


@feedback_router.callback_query(F.data == "participate_later")
async def process_participate_later(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∂–µ–ª–∞–Ω–∏—è –æ—Ç–ª–æ–∂–∏—Ç—å —É—á–∞—Å—Ç–∏–µ.
    """
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ state
    feedback_data = await state.get_data()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—Å—Ç—Ä–µ—á–µ –∏–∑ context
    meeting_id = feedback_data.get("meeting_id")
    to_user_id = feedback_data.get("to_user_id")
    
    if not meeting_id or not to_user_id:
        await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.", show_alert=True)
        await state.clear()
        return
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    feedback = Feedback(
        meeting_id=meeting_id,
        from_user_id=callback.from_user.id,
        to_user_id=to_user_id,
        rating=feedback_data.get("rating"),
        comment=feedback_data.get("comment")
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    session.add(feedback)
    await session.commit()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å—Ç—Ä–µ—á–∏
    meeting = await get_meeting(session, meeting_id)
    await update_meeting(session, meeting, is_completed=True)
    
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ä–µ–º—è
    user = await get_user(session, callback.from_user.id)
    user.is_active = False
    await session.commit()
    
    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.answer()
    await callback.message.edit_text(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –¢–≤–æ—è –æ—Ü–µ–Ω–∫–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n\n"
        "–Ø –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é. –ê –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å —Ä–∞–Ω—å—à–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ ¬´‚Äé–£—á–∞—Å—Ç–≤—É—é¬ª üòâ"
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()


@feedback_router.callback_query(F.data == "suggest_improvement")
async def process_suggest_improvement(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∂–µ–ª–∞–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏—è.
    """
    await callback.answer()
    await callback.message.edit_text(
        "–ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞? –¢–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–º–æ–≥—É—Ç —Å–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –ª—É—á—à–µ!"
    )
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–∂–∏–¥–∞–Ω–∏—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    await state.set_state(FeedbackStates.waiting_for_improvement)


@feedback_router.message(StateFilter(FeedbackStates.waiting_for_improvement))
async def process_improvement(message: Message, state: FSMContext, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ —É–ª—É—á—à–µ–Ω–∏—é.
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    await state.update_data(improvement_suggestion=message.text)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ state
    feedback_data = await state.get_data()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—Å—Ç—Ä–µ—á–µ –∏–∑ context
    meeting_id = feedback_data.get("meeting_id")
    to_user_id = feedback_data.get("to_user_id")
    
    if not meeting_id or not to_user_id:
        await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")
        await state.clear()
        return
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    feedback = Feedback(
        meeting_id=meeting_id,
        from_user_id=message.from_user.id,
        to_user_id=to_user_id,
        rating=feedback_data.get("rating"),
        comment=feedback_data.get("comment"),
        improvement_suggestion=feedback_data.get("improvement_suggestion")
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    session.add(feedback)
    await session.commit()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å—Ç—Ä–µ—á–∏
    meeting = await get_meeting(session, meeting_id)
    await update_meeting(session, meeting, is_completed=True)
    
    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(
        "–ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è! –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Ö —É—á—Ç–µ–º.\n\n"
        "–•–æ—á–µ—à—å –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤—Å—Ç—Ä–µ—á–∞—Ö?",
        reply_markup=create_yes_no_keyboard("–î–∞!", "–ü–æ–∑–∂–µ")
    )


@feedback_router.callback_query(StateFilter(FeedbackStates.waiting_for_improvement), F.data == "–î–∞!")
async def confirm_after_improvement(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—á–∞—Å—Ç–∏—è –ø–æ—Å–ª–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —É–ª—É—á—à–µ–Ω–∏–π.
    """
    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.answer()
    await callback.message.edit_text(
        "–û—Ç–ª–∏—á–Ω–æ! –ë—É–¥—É –ø–æ–¥–±–∏—Ä–∞—Ç—å —Ç–µ–±–µ –Ω–æ–≤—ã–µ –≤—Å—Ç—Ä–µ—á–∏ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é. –ñ–¥–∏ –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π! üòä"
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()


@feedback_router.callback_query(StateFilter(FeedbackStates.waiting_for_improvement), F.data == "–ü–æ–∑–∂–µ")
async def postpone_after_improvement(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–∏—è –ø–æ—Å–ª–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —É–ª—É—á—à–µ–Ω–∏–π.
    """
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ä–µ–º—è
    user = await get_user(session, callback.from_user.id)
    user.is_active = False
    await session.commit()
    
    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.answer()
    await callback.message.edit_text(
        "–•–æ—Ä–æ—à–æ! –Ø –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é. –ê –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å —Ä–∞–Ω—å—à–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ ¬´‚Äé–£—á–∞—Å—Ç–≤—É—é¬ª üòâ"
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear() 